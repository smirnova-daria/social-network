{"version":3,"file":"static/js/952.2152443c.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/NewPostForm.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileData/ProfileData.module.css?ce4d","components/Profile/ProfileInfo/ProfileData/ContactsList.js","utils/FormValidation/editProfileFormSchema.js","components/Profile/ProfileInfo/ProfileData/EditProfileForm.js","components/Profile/ProfileInfo/ProfileData/ProfileData.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts__new\":\"MyPosts_posts__new__O4gzs\",\"posts__list\":\"MyPosts_posts__list__i1sKd\"};","// extracted by mini-css-extract-plugin\nexport default {\"post__wrapper\":\"Post_post__wrapper__Tr3Dj\",\"avatar\":\"Post_avatar__1jNVf\",\"post__message\":\"Post_post__message__nsOwV\",\"likes\":\"Post_likes__ZPOtl\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n  return (\r\n    <li className={s.post}>\r\n      <div className={s.post__wrapper}>\r\n        <img\r\n          className={s.avatar}\r\n          src=\"https://media.istockphoto.com/vectors/user-icon-flat-isolated-on-white-background-user-symbol-vector-vector-id1300845620?k=20&m=1300845620&s=612x612&w=0&h=f4XTZDAv7NPuZbG0habSpU0sNgECM0X7nbKzTUta3n8=\"\r\n        />\r\n        <p className={s.post__message}>{props.message}</p>\r\n      </div>\r\n\r\n      <span className={s.likes}>likes: {props.likes}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport React from \"react\";\r\n\r\nconst NewPostForm = (props) => {\r\n  return (\r\n    <Formik initialValues={{ postText: \"\" }} onSubmit={props.handleSubmit}>\r\n      {() => (\r\n        <Form>\r\n          <div>\r\n            <Field\r\n              component={\"textarea\"}\r\n              name={\"postText\"}\r\n              placeholder={\"Напишите что-нибудь...\"}\r\n            />\r\n          </div>\r\n          <ErrorMessage name=\"postText\" component=\"div\" />\r\n\r\n          <button type={\"submit\"}>Опубликовать</button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default NewPostForm;\r\n","import React from \"react\";\r\nimport {\r\n  addPostActionCreator,\r\n  updatePostTextActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport NewPostForm from \"./NewPostForm\";\r\nconst MyPosts = (props) => {\r\n  const addPost = (values) => {\r\n    props.addPost(values.postText);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Мои посты</h3>\r\n      <NewPostForm handleSubmit={addPost} />\r\n      <ul className={s.posts__list}>\r\n        {props.posts.map((p) => (\r\n          <Post message={p.message} likes={p.likesCount} key={p.id} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (text) => {\r\n      dispatch(addPostActionCreator(text));\r\n    },\r\n  };\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile_img\":\"ProfileInfo_profile_img__ZCuL1\",\"info\":\"ProfileInfo_info__OvZlQ\",\"avatar\":\"ProfileInfo_avatar__m+0bS\",\"name\":\"ProfileInfo_name__eockl\",\"about\":\"ProfileInfo_about__er1cd\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileStatus.module.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{status || \"__\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n            onChange={onStatusChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ProfileData_contactsList__2x8O2\",\"error\":\"ProfileData_error__sHyl+\"};","import React from \"react\";\r\nimport s from \"./ProfileData.module.css\";\r\n\r\nconst ContactsList = ({ contacts }) => {\r\n  return (\r\n    <div>\r\n      <h4>Contacts:</h4>\r\n      <ul className={s.contactsList}>\r\n        {Object.keys(contacts).map((key) => {\r\n          return (\r\n            <li key={key}>\r\n              <a href={contacts[key]}>\r\n                {key}: {contacts[key]}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import * as Yup from \"yup\";\r\n\r\nconst editProfileFormSchema = Yup.object().shape({\r\n  fullName: Yup.string().required(\"Required\"),\r\n  aboutMe: Yup.string().required(\"Required\"),\r\n  lookingForAJobDescription: Yup.string().required(\"Required\"),\r\n});\r\nexport default editProfileFormSchema;\r\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport editProfileFormSchema from \"../../../../utils/FormValidation/editProfileFormSchema\";\r\nimport s from \"./ProfileData.module.css\";\r\n\r\nconst EditProfileForm = ({\r\n  profile,\r\n  contacts,\r\n  saveProfile,\r\n  editModeDisable,\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={profile}\r\n      onSubmit={(values, { setStatus, setSubmitting }) => {\r\n        saveProfile(values, setStatus)\r\n          .then(() => {\r\n            editModeDisable();\r\n          })\r\n          .catch(() => {\r\n            setSubmitting(false);\r\n          });\r\n      }}\r\n      validationSchema={editProfileFormSchema}\r\n    >\r\n      {({ status }) => {\r\n        return (\r\n          <Form>\r\n            <div>\r\n              <Field type={\"text\"} name={\"fullName\"} placeholder={\"fullName\"} />\r\n              <ErrorMessage\r\n                name=\"fullName\"\r\n                component=\"span\"\r\n                className={s.error}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Field\r\n                component={\"textarea\"}\r\n                name={\"aboutMe\"}\r\n                placeholder={\"about me\"}\r\n              />\r\n              <ErrorMessage\r\n                name=\"aboutMe\"\r\n                component=\"span\"\r\n                className={s.error}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <Field type={\"checkbox\"} name={\"lookingForAJob\"} />\r\n                Ищу работу\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <Field\r\n                component={\"textarea\"}\r\n                name={\"lookingForAJobDescription\"}\r\n                placeholder={\"Мои навыки...\"}\r\n              />\r\n              <ErrorMessage\r\n                name=\"lookingForAJobDescription\"\r\n                component=\"span\"\r\n                className={s.error}\r\n              />\r\n            </div>\r\n            <div>\r\n              {Object.keys(contacts).map((key) => {\r\n                return (\r\n                  <div key={key}>\r\n                    {key}\r\n                    <Field\r\n                      type={\"text\"}\r\n                      name={\"contacts.\" + key}\r\n                      placeholder={key}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div>{status}</div>\r\n            <button type={\"submit\"}>Сохранить</button>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default EditProfileForm;\r\n","import React, { useState } from \"react\";\r\nimport ContactsList from \"./ContactsList\";\r\nimport EditProfileForm from \"./EditProfileForm\";\r\nimport s from \"./ProfileData.module.css\";\r\n\r\nconst ProfileData = ({ profile, isOwner, editMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <button onClick={editMode}>Edit</button>}\r\n      <div>\r\n        <p className={s.name}>\r\n          <b>Имя: </b>\r\n          {profile.fullName}\r\n        </p>\r\n        <p className={s.about}>\r\n          <b>Обо мне: </b>\r\n          {profile.aboutMe}\r\n        </p>\r\n        <p>\r\n          <b>Ищу работу:</b> {profile.lookingForAJob ? \"ДА\" : \"НЕТ\"}\r\n        </p>\r\n        {profile.lookingForAJob && (\r\n          <p>\r\n            <b>Мои навыки: </b>\r\n            {profile.lookingForAJobDescription}\r\n          </p>\r\n        )}\r\n        <ContactsList contacts={profile.contacts} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileData;\r\n","import React, { useState } from \"react\";\r\nimport Preloader from \"../../UI/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/userPhoto.png\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport EditProfileForm from \"./ProfileData/EditProfileForm\";\r\nconst ProfileInfo = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  \r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.info}>\r\n        <div className={s.avatar}>\r\n          <img src={props.profile.photos.large || userPhoto} alt=\"avatar\" />\r\n          {props.isOwner && (\r\n            <input type={\"file\"} onChange={onMainPhotoSelected} />\r\n          )}\r\n        </div>\r\n        {editMode ? (\r\n          <EditProfileForm\r\n            profile={props.profile}\r\n            contacts={props.profile.contacts}\r\n            saveProfile={props.saveProfile}\r\n            editModeDisable={()=> setEditMode(false)}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            profile={props.profile}\r\n            isOwner={props.isOwner}\r\n            editMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      <ProfileStatusWithHooks\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo {...props} />\r\n      <MyPostsContainer store={props.store} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../redux/profile-reducer\";\r\nimport {\r\n  Navigate,\r\n  useLocation,\r\n  useNavigate,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  state = {\r\n    redirect: false,\r\n  };\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.setState({ redirect: true });\r\n      }\r\n    }\r\n    if (userId) {\r\n      this.props.getProfile(userId);\r\n      this.props.getStatus(userId);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.redirect) return <Navigate to={\"/login\"} />;\r\n    return (\r\n      <Profile {...this.props} isOwner={!this.props.router.params.userId} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst withRouter = (Component) => {\r\n  const ComponentWithRouterProp = (props) => {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  };\r\n\r\n  return ComponentWithRouterProp;\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"names":["props","className","s","src","message","likes","initialValues","postText","onSubmit","handleSubmit","component","name","placeholder","type","values","addPost","posts","map","p","likesCount","id","connect","state","profilePage","newPostText","dispatch","text","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","target","contacts","Object","keys","key","href","Yup","shape","fullName","required","aboutMe","lookingForAJobDescription","profile","saveProfile","editModeDisable","setSubmitting","then","catch","validationSchema","editProfileFormSchema","isOwner","onClick","lookingForAJob","photos","large","userPhoto","alt","files","length","savePhoto","ProfileStatusWithHooks","Preloader","store","ProfileContainer","redirect","userId","this","router","params","authorizedUserId","setState","getProfile","getStatus","refreshProfile","prevProps","prevState","to","React","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}